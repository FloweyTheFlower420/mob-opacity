plugins {
	id "fabric-loom" version "0.7-SNAPSHOT"
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name + '-' + project.minecraft_version
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://maven.parchmentmc.org/" }
	maven { url = "https://maven.terraformersmc.com/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	//mappings loom.layered() {
	//	officialMojangMappings()
	//	parchment("org.parchmentmc.data:parchment-1.16.5:2022.03.06@zip")
	//}

	mappings loom.officialMojangMappings()
	modApi "com.terraformersmc:modmenu:1.16.0"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:4.14.64") {
		exclude(group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
	repositories {
	}
}
